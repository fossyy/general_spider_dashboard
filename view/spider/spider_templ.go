// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.786
package spiderView

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"general_spider_controll_panel/types"
	"general_spider_controll_panel/view/layout"
)

func Main(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex h-screen\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = layout.LeftNavbar("Spiders").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex-1 overflow-auto\"><div class=\"p-8\"><div class=\"flex justify-between items-center mb-6\"><h1 class=\"text-3xl font-bold\">Spiders</h1><button id=\"refreshButton\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded flex items-center\"><i class=\"ri-refresh-line mr-2\"></i> Refresh</button></div><div class=\"bg-white shadow-md rounded-lg overflow-hidden\"><div class=\"px-4 py-3 border-b border-gray-200\"><h2 class=\"text-lg font-semibold text-gray-800\">Active Spiders</h2></div><ul class=\"divide-y divide-gray-200\" id=\"spiderList\" hx-get=\"?action=get-spiders\" hx-trigger=\"load\" hx-swap=\"innerHTML\"><li class=\"px-4 py-3 sm:px-6\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0\"><div class=\"h-4 w-4 rounded-full bg-gray-200 animate-pulse\"></div></div><div class=\"ml-3\"><div class=\"w-32 h-5 bg-gray-200 rounded animate-pulse\"></div><div class=\"mt-1 w-48 h-4 bg-gray-200 rounded animate-pulse\"></div></div></div><div class=\"flex space-x-2\"><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div></div></div></li><li class=\"px-4 py-3 sm:px-6\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0\"><div class=\"h-4 w-4 rounded-full bg-gray-200 animate-pulse\"></div></div><div class=\"ml-3\"><div class=\"w-32 h-5 bg-gray-200 rounded animate-pulse\"></div><div class=\"mt-1 w-48 h-4 bg-gray-200 rounded animate-pulse\"></div></div></div><div class=\"flex space-x-2\"><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div></div></div></li><li class=\"px-4 py-3 sm:px-6\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0\"><div class=\"h-4 w-4 rounded-full bg-gray-200 animate-pulse\"></div></div><div class=\"ml-3\"><div class=\"w-32 h-5 bg-gray-200 rounded animate-pulse\"></div><div class=\"mt-1 w-48 h-4 bg-gray-200 rounded animate-pulse\"></div></div></div><div class=\"flex space-x-2\"><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div><div class=\"w-16 h-8 bg-gray-200 rounded animate-pulse\"></div></div></div></li></ul></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base(title).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func GetSpider(spiders *types.ScrapydResponseGetingSpiders) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, runningSpider := range spiders.Running {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"px-4 py-3 sm:px-6\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0\"><span class=\"h-4 w-4 rounded-full bg-green-400 flex items-center justify-center\"><span class=\"h-2 w-2 rounded-full bg-green-600\"></span></span></div><div class=\"ml-3\"><p class=\"text-sm font-medium text-gray-900\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(runningSpider.Id)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/spider/spider.templ`, Line: 96, Col: 69}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><p class=\"text-sm text-gray-500\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(runningSpider.StartTime)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/spider/spider.templ`, Line: 97, Col: 64}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></div></div><div class=\"flex space-x-2\"><button class=\"text-sm bg-red-100 hover:bg-red-200 text-red-800 font-semibold py-1 px-3 rounded-full transition duration-300 ease-in-out\">Stop</button> <a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 templ.SafeURL = templ.SafeURL(fmt.Sprintf("spider/%v", runningSpider.Id))
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var6)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"text-sm bg-blue-100 hover:bg-blue-200 text-blue-800 font-semibold py-1 px-3 rounded-full transition duration-300 ease-in-out\">Details</a></div></div></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		for _, finishedSpider := range spiders.Finished {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"px-4 py-3 sm:px-6\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center\"><div class=\"flex-shrink-0\"><span class=\"h-4 w-4 rounded-full bg-gray-400 flex items-center justify-center\"><span class=\"h-2 w-2 rounded-full bg-gray-600\"></span></span></div><div class=\"ml-3\"><p class=\"text-sm font-medium text-gray-900\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(finishedSpider.Id)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/spider/spider.templ`, Line: 121, Col: 70}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><p class=\"text-sm text-gray-500\">Finished - Completed ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(finishedSpider.EndTime)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/spider/spider.templ`, Line: 122, Col: 84}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></div></div><div class=\"flex space-x-2\"><button class=\"text-sm bg-green-100 hover:bg-green-200 text-green-800 font-semibold py-1 px-3 rounded-full transition duration-300 ease-in-out\">Restart</button> <a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 templ.SafeURL = templ.SafeURL(fmt.Sprintf("spider/%v", finishedSpider.Id))
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var9)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"text-sm bg-blue-100 hover:bg-blue-200 text-blue-800 font-semibold py-1 px-3 rounded-full transition duration-300 ease-in-out\">Details</a></div></div></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if len(spiders.Running) == 0 {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"noSpidersMessage\" class=\"mt-8 text-center\"><p class=\"text-gray-600 mb-4\">No spiders are currently active or scheduled.</p><a href=\"deploy-spider.html\" class=\"inline-block bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\">Deploy New Spider</a></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
