package proxiesView

import (
	"general_spider_controll_panel/types/models"
	"general_spider_controll_panel/view/layout"
	"fmt"
	"general_spider_controll_panel/utils"
)

templ Main(title string) {
	@layout.Base(title) {
		<div class="flex h-screen">
			@layout.LeftNavbar("Proxies")
			<div class="container mx-auto px-4 py-8">
				<h1 class="text-2xl font-bold mb-6">Advanced Proxy Management</h1>
				<div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
					<h2 class="text-xl font-semibold mb-4">Add New Proxy</h2>
					<form class="flex gap-2 mb-6" hx-post="" hx-target="#proxies" hx-swap="afterend">
						<input
							type="text"
							required
							placeholder="Enter proxy address : 127.0.0.1:8118"
							name="proxyAddr"
							class="flex-grow rounded-md border border-gray-300 bg-gray-50 px-3 py-2 text-gray-900 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
						/>
						<select
							name="proxyProto"
							required
							class="rounded-md border border-gray-300 bg-gray-50 px-3 py-2 text-gray-900 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
						>
							<option value="http">HTTP</option>
							<option value="https">HTTPS</option>
						</select>
						<button
							type="submit"
							class="rounded-md bg-blue-500 px-4 py-2 text-sm font-semibold text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
						>
							<i class="ri-add-line"></i>
							<span class="sr-only">Add Proxy</span>
						</button>
					</form>
					<div class="flex justify-between items-center mb-4">
						<h2 class="text-xl font-semibold">Current Proxies</h2>
						<button
                            hx-post="?action=test-proxies"
                            hx-target="#proxies"
                            id="testProxies"
							class="rounded-md bg-green-500 px-4 py-2 text-sm font-semibold text-white hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
						>
							Test All Proxies
						</button>
					</div>
					<div class="mb-4 flex space-x-4">
						<div class="flex items-center">
							<span class="h-3 w-3 rounded-full bg-green-500 mr-2"></span>
							<span class="text-sm text-gray-600">Online</span>
						</div>
						<div class="flex items-center">
							<span class="h-3 w-3 rounded-full bg-red-500 mr-2"></span>
							<span class="text-sm text-gray-600">Offline</span>
						</div>
						<div class="flex items-center">
							<span class="h-3 w-3 rounded-full bg-yellow-500 mr-2"></span>
							<span class="text-sm text-gray-600">Checking</span>
						</div>
						<div class="flex items-center">
							<span class="h-3 w-3 rounded-full bg-gray-500 mr-2"></span>
							<span class="text-sm text-gray-600">Unchecked</span>
						</div>
					</div>
					<ul id="proxies" class="space-y-2" hx-get="?action=get-proxies" hx-trigger="load"></ul>
					<div id="deleteModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden opacity-0 transition-opacity duration-300 z-50">
						<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white transform transition-all duration-300 -translate-y-full scale-95 opacity-0 z-50">
							<div class="mt-3 text-center">
								<h3 class="text-lg leading-6 font-medium text-gray-900">Confirm Deletion</h3>
								<div class="mt-2 px-7 py-3">
									<p class="text-sm text-gray-500">
										Are you sure you want to delete the proxy "<span class="font-medium break-all" id="proxyToDelete"></span>"? This action cannot be undone.
									</p>
								</div>
								<div class="items-center px-4 py-3">
									<button onClick={ hideDeletionModal() } hx-swap="outerHTML" id="confirmDelete" class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300 transition duration-300">
										Yes, delete this proxy
									</button>
									<button onClick={ hideDeletionModal() } id="cancelDelete" class="mt-3 px-4 py-2 bg-white text-gray-700 text-base font-medium rounded-md w-full shadow-sm border border-gray-300 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-300 transition duration-300">
										Cancel
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
        <script>
        document.body.addEventListener('htmx:beforeRequest', function(event) {
		if (event.target && event.target.id == "testProxies") {
			document.getElementById('testProxies').disabled = true;
			document.getElementById('testProxies').textContent = 'Testing...';
		}
		});
        document.body.addEventListener('htmx:afterRequest', function(event) {
		if (event.target && event.target.id == "testProxies") {
			document.getElementById('testProxies').disabled = false;
			document.getElementById('testProxies').textContent = 'Test All Proxies';
		}
		});
        </script>
	}
}

script showDeletionModal(address, id string) {
    const modal = document.getElementById('deleteModal');
    const modalContent = modal.querySelector('div');
    const confirmDelete = document.getElementById('confirmDelete');
    const proxyToDelete = document.getElementById('proxyToDelete');

    confirmDelete.setAttribute("hx-delete", "/proxies/" + address + "?consent=true");
    confirmDelete.setAttribute("hx-target", "#proxy-" + id);
    htmx.process(confirmDelete);
    modal.classList.remove('hidden');
    setTimeout(() => {
        modal.classList.remove('opacity-0');
        modalContent.classList.remove('-translate-y-full', 'scale-95', 'opacity-0');
    }, 50);
    proxyToDelete.textContent = address;
}

script hideDeletionModal() {
    const modal = document.getElementById('deleteModal');
    const modalContent = modal.querySelector('div');

    modal.classList.add('opacity-0');
    modalContent.classList.add('-translate-y-full', 'scale-95', 'opacity-0');
    setTimeout(() => {
        modal.classList.add('hidden');
    }, 300);
}

templ Proxies(proxies []*models.Proxy) {
	if len(proxies) == 0 {
		<div id="noDomains" class="px-6 py-12 text-center">
			<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
			</svg>
			<h3 class="mt-2 text-sm font-medium text-gray-900">No proxy added yet</h3>
			<p class="mt-1 text-sm text-gray-500">Get started by adding your first proxy.</p>
		</div>
	} else {
		for _, proxy := range proxies {
			@Proxy(proxy)
		}
	}
}

templ Proxy(proxy *models.Proxy) {
	switch proxy.Status {
		case models.Online:
			<li id={ fmt.Sprintf("proxy-%d", proxy.ID) } class="flex items-center justify-between bg-gray-50 px-4 py-2 rounded-md">
				<div class="flex items-center space-x-2">
					<span class="h-3 w-3 rounded-full bg-green-500"></span>
					<span>{ proxy.Address }</span>
					<span class="text-sm text-gray-500">({ proxy.Protocol })</span>
				</div>
				<div class="flex items-center space-x-2">
					<button class="text-blue-500 hover:text-blue-700 focus:outline-none" hx-post={"?action=test-proxy&id=" + utils.IntToString(proxy.ID)} hx-target={fmt.Sprintf("#proxy-%d", proxy.ID)} hx-swap="outerHTML">
						<i class="ri-refresh-line"></i>
						<span class="sr-only">Check Proxy</span>
					</button>
					<button class="text-red-500 hover:text-red-700 focus:outline-none" onClick={ showDeletionModal(proxy.Address, utils.IntToString(proxy.ID)) }>
						<i class="ri-delete-bin-line"></i>
						<span class="sr-only">Remove Proxy</span>
					</button>
				</div>
			</li>
		case models.Offline:
			<li id={ fmt.Sprintf("proxy-%d", proxy.ID) } class="flex items-center justify-between bg-gray-50 px-4 py-2 rounded-md">
				<div class="flex items-center space-x-2">
					<span class="h-3 w-3 rounded-full bg-red-500"></span>
					<span>{ proxy.Address }</span>
					<span class="text-sm text-gray-500">({ proxy.Protocol })</span>
				</div>
				<div class="flex items-center space-x-2">
					<button class="text-blue-500 hover:text-blue-700 focus:outline-none" hx-post={"?action=test-proxy&id=" + utils.IntToString(proxy.ID)} hx-target={fmt.Sprintf("#proxy-%d", proxy.ID)} hx-swap="outerHTML">
						<i class="ri-refresh-line"></i>
						<span class="sr-only">Check Proxy</span>
					</button>
					<button class="text-red-500 hover:text-red-700 focus:outline-none" onClick={ showDeletionModal(proxy.Address, utils.IntToString(proxy.ID)) }>
						<i class="ri-delete-bin-line"></i>
						<span class="sr-only">Remove Proxy</span>
					</button>
				</div>
			</li>
		case models.Checking:
			<li id={ fmt.Sprintf("proxy-%d", proxy.ID) } class="flex items-center justify-between bg-gray-50 px-4 py-2 rounded-md">
				<div class="flex items-center space-x-2">
					<span class="h-3 w-3 rounded-full bg-yellow-500"></span>
					<span>{ proxy.Address }</span>
					<span class="text-sm text-gray-500">({ proxy.Protocol })</span>
				</div>
				<div class="flex items-center space-x-2">
					<button class="text-blue-500 hover:text-blue-700 focus:outline-none" disabled>
						<i class="ri-refresh-line animate-spin"></i>
						<span class="sr-only">Checking Proxy</span>
					</button>
					<button class="text-red-500 hover:text-red-700 focus:outline-none" onClick={ showDeletionModal(proxy.Address, utils.IntToString(proxy.ID)) }>
						<i class="ri-delete-bin-line"></i>
						<span class="sr-only">Remove Proxy</span>
					</button>
				</div>
			</li>
		case models.Unchecked:
			<li id={ fmt.Sprintf("proxy-%d", proxy.ID) } class="flex items-center justify-between bg-gray-50 px-4 py-2 rounded-md">
				<div class="flex items-center space-x-2">
					<span class="h-3 w-3 rounded-full bg-gray-500"></span>
					<span>{ proxy.Address }</span>
					<span class="text-sm text-gray-500">({ proxy.Protocol })</span>
				</div>
				<div class="flex items-center space-x-2" hx-post={"?action=test-proxy&id=" + utils.IntToString(proxy.ID)} hx-target={fmt.Sprintf("#proxy-%d", proxy.ID)} hx-swap="outerHTML">
					<button class="text-blue-500 hover:text-blue-700 focus:outline-none">
						<i class="ri-refresh-line"></i>
						<span class="sr-only">Check Proxy</span>
					</button>
					<button class="text-red-500 hover:text-red-700 focus:outline-none" onClick={ showDeletionModal(proxy.Address, utils.IntToString(proxy.ID)) }>
						<i class="ri-delete-bin-line"></i>
						<span class="sr-only">Remove Proxy</span>
					</button>
				</div>
			</li>
	}
}
